{"version":3,"sources":["components/loading/LoadingSpinner.js","redux/reducers/ajaxStatusReducer.js","redux/reducers/storeReducer.js","App.js","redux/rootReducer.js","redux/createStore.js","index.js"],"names":["LoadingSpinner","className","Component","SERVER_ERROR","FETCH_PENDING","FETCH_COMPLETE","SUBMIT_PENDING","SUBMIT_COMPLETE","RESET_STATUS","initialState","isServerError","isLoading","isSubmitting","isSubmitSuccess","serverStatus","serverMessage","serverErrors","sendForm","actionName","reducer","state","action","type","message","FETCH_CURRENT_FORECAST","FETCH_FIVE_DAYS_FORECAST","FETCH_BY_THREE_HOURS_FORECAST","currentForeCastData","currentDummy","fiveDaysForeCastData","forecastDummy","byThreeHoursForecastData","MainContainer","Loadable","loader","loading","App","combineReducers","ajaxStatus","ajaxStatusReducer","store","storeReducer","form","formReducer","history","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","createStore","connectRouter","rootReducer","rootEl","document","getElementById","render"],"mappings":"uNAGqBA,G,uLAEjB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,iB,GANqBC,e,+wBCHrC,IAAMC,EAAe,yCACfC,EAAgB,iCAChBC,EAAiB,kCACjBC,EAAiB,kCACjBC,EAAkB,mCAClBC,EAAe,gCAEtBC,EAAe,CACjBC,eAAe,EACfC,WAAW,EACXC,cAAc,EACdC,iBAAiB,EACjBC,aAAc,GACdC,cAAe,GACfC,aAAc,GACdC,SAAU,GACVC,WAAY,IAGD,SAASC,IAA4C,IAApCC,EAAmC,uDAA3BX,EAAcY,EAAa,uDAAJ,GAC3D,OAAQA,EAAOC,MACX,KAAKnB,EACD,OAAO,EAAP,GACOiB,EADP,CAEIV,eAAe,EACfC,WAAW,EACXC,cAAc,EACdE,aAAcO,EAAOP,aACrBC,cAAeM,EAAON,cACtBC,aAAcK,EAAOL,eAE7B,KAAKZ,EACD,OAAO,EAAP,GACOgB,EADP,CAEIT,WAAW,EACXO,WAAYG,EAAOH,aAE3B,KAAKb,EACD,OAAO,EAAP,GACOe,EADP,CAEIT,WAAW,EACXD,eAAe,EACfG,iBAAiB,EACjBC,aAAc,KAEtB,KAAKR,EACD,OAAO,EAAP,GACOc,EADP,CAEIR,cAAc,EACdK,SAAUI,EAAOJ,WAEzB,KAAKV,EACD,OAAO,EAAP,GACOa,EADP,CAEIR,cAAc,EACdC,iBAAiB,EACjBH,eAAe,EACfK,cAAeM,EAAOE,SAAW,KAEzC,KAAKf,EACD,OAAO,EAAP,GACOY,EADP,CAEIV,eAAe,EACfC,WAAW,EACXC,cAAc,EACdC,iBAAiB,EACjBC,aAAc,GACdC,cAAe,GACfE,SAAU,KAElB,QACI,OAAOG,K,2tBCpEZ,IAAMI,EAAyB,+BACzBC,EAA2B,gCAC3BC,EAAgC,oCAEvCjB,EAAe,CACjBkB,oBAAqBC,EACrBC,qBAAsBC,EACtBC,yBAA0B,IAGf,SAASZ,IAA4C,IAApCC,EAAmC,uDAA3BX,EAAcY,EAAa,uDAAJ,GAC3D,OAAQA,EAAOC,MACX,KAAKE,EACD,OAAO,EAAP,GACOJ,EADP,CAEIO,oBAAqBN,EAAOM,sBAGpC,KAAKF,EACD,OAAO,EAAP,GACOL,EADP,CAEIS,qBAAsBR,EAAOQ,uBAGrC,KAAKH,EACD,OAAO,EAAP,GACON,EADP,CAEIW,yBAA0BV,EAAOU,2BAGzC,QACI,OAAOX,K,m1cC1BbY,EAAgBC,IAAS,CAC3BC,OAAQ,kBAAM,qDACdC,QAASnC,MAGQoC,E,iLAEb,OACI,kBAACJ,EAAD,U,GAHqB9B,a,uDCRlBmC,cAAgB,CAC3BC,WAAYC,IACZC,MAAOC,IACPC,KAAMC,MCFGC,EAAUC,cAIjBC,EAAa,CACjBC,IACAC,2BAAiBJ,IAWbK,EAAoBC,IAAO,WAAP,GACxBC,IAAe,WAAf,EAAmBL,IADK,OAdR,KAyBHN,EANDY,YACZC,wBAAcT,EAAdS,CAAuBC,GArBJ,GAuBnBL,G,QCzBIM,EAASC,SAASC,eAAe,QACvCC,iBACI,kBAAC,WAAD,CACIlB,MAAOA,GAEP,kBAAC,EAAD,OAEJe,K","file":"static/js/main.03d89b61.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../../sass/loading.scss';\n\nexport default class LoadingSpinner extends Component {\n  render() {\n    return (\n      <div className=\"spinner\">\n        <div className=\"bounce1\" />\n        <div className=\"bounce2\" />\n        <div className=\"bounce3\" />\n      </div>\n    );\n  }\n}\n","export const SERVER_ERROR = 'aspire/ajaxStatus/fetchDataServerError';\nexport const FETCH_PENDING = 'aspire/ajaxStatus/fetchPending';\nexport const FETCH_COMPLETE = 'aspire/ajaxStatus/fetchComplete';\nexport const SUBMIT_PENDING = 'aspire/ajaxStatus/submitPending';\nexport const SUBMIT_COMPLETE = 'aspire/ajaxStatus/submitComplete';\nexport const RESET_STATUS = 'aspire/ajaxStatus/resetStatus';\n\nconst initialState = {\n    isServerError: false,\n    isLoading: false,\n    isSubmitting: false,\n    isSubmitSuccess: false,\n    serverStatus: '',\n    serverMessage: '',\n    serverErrors: [],\n    sendForm: '',\n    actionName: ''\n};\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case SERVER_ERROR:\n            return {\n                ...state,\n                isServerError: true,\n                isLoading: false,\n                isSubmitting: false,\n                serverStatus: action.serverStatus,\n                serverMessage: action.serverMessage,\n                serverErrors: action.serverErrors\n            };\n        case FETCH_PENDING:\n            return {\n                ...state,\n                isLoading: true,\n                actionName: action.actionName\n            };\n        case FETCH_COMPLETE:\n            return {\n                ...state,\n                isLoading: false,\n                isServerError: false,\n                isSubmitSuccess: false,\n                serverStatus: ''\n            };\n        case SUBMIT_PENDING:\n            return {\n                ...state,\n                isSubmitting: true,\n                sendForm: action.sendForm\n            };\n        case SUBMIT_COMPLETE:\n            return {\n                ...state,\n                isSubmitting: false,\n                isSubmitSuccess: true,\n                isServerError: false,\n                serverMessage: action.message || ''\n            };\n        case RESET_STATUS:\n            return {\n                ...state,\n                isServerError: false,\n                isLoading: false,\n                isSubmitting: false,\n                isSubmitSuccess: false,\n                serverStatus: '',\n                serverMessage: '',\n                sendForm: ''\n            };\n        default:\n            return state;\n    }\n}\n","import currentDummy from '../../dummyData/weather';\nimport forecastDummy from '../../dummyData/forecast';\n\nexport const FETCH_CURRENT_FORECAST = 'weather/fetchCurrentForecast';\nexport const FETCH_FIVE_DAYS_FORECAST = 'weather/fetchFiveDaysForecast';\nexport const FETCH_BY_THREE_HOURS_FORECAST = 'weather/fetchByThreeHoursForecast';\n\nconst initialState = {\n    currentForeCastData: currentDummy,\n    fiveDaysForeCastData: forecastDummy,\n    byThreeHoursForecastData: {}\n};\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case FETCH_CURRENT_FORECAST: {\n            return {\n                ...state,\n                currentForeCastData: action.currentForeCastData\n            };\n        }\n        case FETCH_FIVE_DAYS_FORECAST: {\n            return {\n                ...state,\n                fiveDaysForeCastData: action.fiveDaysForeCastData\n            };\n        }\n        case FETCH_BY_THREE_HOURS_FORECAST: {\n            return {\n                ...state,\n                byThreeHoursForecastData: action.byThreeHoursForecastData\n            };\n        }\n        default:\n            return state;\n    }\n}","import React, { Component } from 'react';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './sass/weather.scss';\n\n//loader\nimport Loadable from 'react-loadable';\nimport LoadingSpinner from './components/loading/LoadingSpinner';\n\nconst MainContainer = Loadable({\n    loader: () => import('./containers/MainContainer'),\n    loading: LoadingSpinner\n});\n\nexport default class App extends Component {\n    render() {\n        return (\n            <MainContainer />\n        );\n    }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport ajaxStatusReducer from './reducers/ajaxStatusReducer';\nimport storeReducer from './reducers/storeReducer';\n\nexport default combineReducers({\n    ajaxStatus: ajaxStatusReducer,\n    store: storeReducer,\n    form: formReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport {createBrowserHistory} from 'history';\nimport rootReducer from './rootReducer';\n\nexport const history = createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [\n  thunk,\n  routerMiddleware(history)\n]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n\nexport default store","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport store from './redux/createStore';\nimport { Provider } from 'react-redux';\n\nconst rootEl = document.getElementById('root');\nrender(\n    <Provider\n        store={store}\n    >\n        <App />\n    </Provider>,\n    rootEl\n);\n"],"sourceRoot":""}